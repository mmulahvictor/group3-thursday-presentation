OOP is based on objects, which may contain data, in the form of fields, often known as attributes; and code, in the form of procedures, often known as methods. A feature of objects is that an object's procedures can access and often modify the data fields of the object with which they are associated (objects have a notion of "this" or "self"). In OOP, computer programs are designed by making them out of objects that interact with one another.[1] OOP languages are diverse, but the most popular ones are class-based, meaning that objects are instances of classes, which also determine their types.

- classes and instances

- 'new' class method

- instance methods

- instance variables and local variables

- setter and getter methods

- attribute accessor macros

- setting instance variables from initialize